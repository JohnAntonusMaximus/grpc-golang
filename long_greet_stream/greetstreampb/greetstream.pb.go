// Code generated by protoc-gen-go. DO NOT EDIT.
// source: greetstream.proto

/*
Package greetstreampb is a generated protocol buffer package.

It is generated from these files:
	greetstream.proto

It has these top-level messages:
	Greeting
	LongGreetRequest
	LongGreetResponse
*/
package greetstreampb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Greeting struct {
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
}

func (m *Greeting) Reset()                    { *m = Greeting{} }
func (m *Greeting) String() string            { return proto.CompactTextString(m) }
func (*Greeting) ProtoMessage()               {}
func (*Greeting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Greeting) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Greeting) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type LongGreetRequest struct {
	Greeting *Greeting `protobuf:"bytes,1,opt,name=greeting" json:"greeting,omitempty"`
}

func (m *LongGreetRequest) Reset()                    { *m = LongGreetRequest{} }
func (m *LongGreetRequest) String() string            { return proto.CompactTextString(m) }
func (*LongGreetRequest) ProtoMessage()               {}
func (*LongGreetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LongGreetRequest) GetGreeting() *Greeting {
	if m != nil {
		return m.Greeting
	}
	return nil
}

type LongGreetResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *LongGreetResponse) Reset()                    { *m = LongGreetResponse{} }
func (m *LongGreetResponse) String() string            { return proto.CompactTextString(m) }
func (*LongGreetResponse) ProtoMessage()               {}
func (*LongGreetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LongGreetResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Greeting)(nil), "greet.Greeting")
	proto.RegisterType((*LongGreetRequest)(nil), "greet.LongGreetRequest")
	proto.RegisterType((*LongGreetResponse)(nil), "greet.LongGreetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GreetService service

type GreetServiceClient interface {
	// Server Stream
	LongGreetStream(ctx context.Context, opts ...grpc.CallOption) (GreetService_LongGreetStreamClient, error)
}

type greetServiceClient struct {
	cc *grpc.ClientConn
}

func NewGreetServiceClient(cc *grpc.ClientConn) GreetServiceClient {
	return &greetServiceClient{cc}
}

func (c *greetServiceClient) LongGreetStream(ctx context.Context, opts ...grpc.CallOption) (GreetService_LongGreetStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GreetService_serviceDesc.Streams[0], c.cc, "/greet.GreetService/LongGreetStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceLongGreetStreamClient{stream}
	return x, nil
}

type GreetService_LongGreetStreamClient interface {
	Send(*LongGreetRequest) error
	CloseAndRecv() (*LongGreetResponse, error)
	grpc.ClientStream
}

type greetServiceLongGreetStreamClient struct {
	grpc.ClientStream
}

func (x *greetServiceLongGreetStreamClient) Send(m *LongGreetRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greetServiceLongGreetStreamClient) CloseAndRecv() (*LongGreetResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(LongGreetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for GreetService service

type GreetServiceServer interface {
	// Server Stream
	LongGreetStream(GreetService_LongGreetStreamServer) error
}

func RegisterGreetServiceServer(s *grpc.Server, srv GreetServiceServer) {
	s.RegisterService(&_GreetService_serviceDesc, srv)
}

func _GreetService_LongGreetStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreetServiceServer).LongGreetStream(&greetServiceLongGreetStreamServer{stream})
}

type GreetService_LongGreetStreamServer interface {
	SendAndClose(*LongGreetResponse) error
	Recv() (*LongGreetRequest, error)
	grpc.ServerStream
}

type greetServiceLongGreetStreamServer struct {
	grpc.ServerStream
}

func (x *greetServiceLongGreetStreamServer) SendAndClose(m *LongGreetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greetServiceLongGreetStreamServer) Recv() (*LongGreetRequest, error) {
	m := new(LongGreetRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GreetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "greet.GreetService",
	HandlerType: (*GreetServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LongGreetStream",
			Handler:       _GreetService_LongGreetStream_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "greetstream.proto",
}

func init() { proto.RegisterFile("greetstream.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x2f, 0x4a, 0x4d,
	0x2d, 0x29, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05,
	0x0b, 0x29, 0xb9, 0x71, 0x71, 0xb8, 0x83, 0x18, 0x99, 0x79, 0xe9, 0x42, 0xb2, 0x5c, 0x5c, 0x69,
	0x99, 0x45, 0xc5, 0x25, 0xf1, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x9c, 0x60, 0x11, 0xbf, 0xc4, 0xdc, 0x54, 0x21, 0x69, 0x2e, 0xce, 0x9c, 0x44, 0x98, 0x2c, 0x13,
	0x58, 0x96, 0x03, 0x24, 0x00, 0x92, 0x54, 0xb2, 0xe7, 0x12, 0xf0, 0xc9, 0xcf, 0x4b, 0x07, 0x9b,
	0x15, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0xa4, 0xcd, 0xc5, 0x91, 0x0e, 0x35, 0x1b, 0x6c,
	0x1a, 0xb7, 0x11, 0xbf, 0x1e, 0x58, 0x40, 0x0f, 0x66, 0x65, 0x10, 0x5c, 0x81, 0x92, 0x2e, 0x97,
	0x20, 0x92, 0x01, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0xa9, 0xc5,
	0xc5, 0x89, 0xe9, 0x30, 0xe7, 0xc0, 0xb8, 0x46, 0x11, 0x5c, 0x3c, 0x60, 0xa5, 0xc1, 0xa9, 0x45,
	0x65, 0x99, 0xc9, 0xa9, 0x42, 0x1e, 0x5c, 0xfc, 0x70, 0xed, 0xc1, 0x60, 0x7f, 0x0a, 0x89, 0x43,
	0x2d, 0x43, 0x77, 0x97, 0x94, 0x04, 0xa6, 0x04, 0xc4, 0x3e, 0x25, 0x06, 0x0d, 0x46, 0x27, 0xfe,
	0x28, 0x5e, 0xa4, 0xd0, 0x2a, 0x48, 0x4a, 0x62, 0x03, 0x07, 0x98, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0x9f, 0x09, 0xe7, 0x0d, 0x45, 0x01, 0x00, 0x00,
}
